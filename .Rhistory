sd(apply(matrix(rpois(10000),1000),1,mean))
sd(apply(matrix(rpois(10000, 4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000, TRUE),1000),1,mean))
choose(3,5)*(0.8^3)*(0.2^2)
choose(3,5)*(0.8^3)*(0.2^2) + choose(4,5)*(0.8^4)*(0.2^1) + choose(5,5)*(0.8^5)*(0.2^0)
choose(5,3)*(0.8^3)*(0.2^2) + choose(5,4)*(0.8^4)*(0.2^1) + choose(5,5)*(0.8^5)*(0.2^0)
pbinom(2,5,0.8,lower.tail = FALSE)
qnorm(0.1)
0
qnorm(0.975,3,4)
qnorm(0.975,3,2)
3+2*1.96
pnorm(1200,1020,50, lower.tail=FALSE)
pnorm((1200-1020)/50, lower.tail=FALSE)
qnorm(0.75,1020,50, lower.tail=TRUE)
0.53
0.53
ppois(3,2.5*4)
pbimom(5,1000,0.01)
pbinom(5,1000,0.01)
ppois(5,10)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
0.6 + c(-1,1) + qnorm(.975)*sqrt(0.6*0.4/100)
0.6 + c(-1,1)*qnorm(.975)*sqrt(0.6*0.4/100)
c$conf.int
x$conf.int
binom.test(60,100)$conf.int
mywald(.2)
ACCompar
ACCompar(20)
lamb <- 5/94.3
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5, 94.32)$conf
pnorm(70,80,10)
qnorm(0.95,1100,75)
qnorm(0.95,1100,7.5)
pbinom(2,5,lower.tail = FALSE)
pbinom(2,5,0.5,lower.tail = FALSE)
pbinom(3,5,0.5,lower.tail = FALSE)
1/sqrt(12)
sd(mean(runif(1000)))
ppois(10,15)
pnorm(14,15,0.1)
?pnorm
pnorm(14,15,10)
pnorm(14,15,10) - pnorm(16,15,10)
pnorm(16,15,10)
pnorm(16,15,1) - pnorm(14,15,1)
library(swirl)
swirl(swirl())
myplot(2)
myplot(20)
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
g1
range(g1)
range(g2)
difference <- g2-g1
mean(difference)
sd(difference)
s <- sd(difference)
mn + c(-1,1)*qt(0.975, 9)
mn + c(-1,1)*qt(0.975, 9)*s/sqrt(10)
t.test(.975,9)$conf.int
t.test(mn,.975,9)$conf.int
t.test(0.975, 9)$conf.int
?t.test
t.test(difference,0.975, 9)$conf.int
t.test(difference)$conf.int
(7*15.34^2)+(20*18.23^2)
7*15.34^2+20*18.23^2
sp <- 7*15.34^2+20*18.23^2
ns <- 28
ns <- 21+8-2
sp <- sqrt(sp/ns)
(132.86-127.44) + c(-1,1)*qt(.975, ns)*(sp*sqrt(1/7+1/20))
(132.86-127.44) + c(-1,1)*qt(.975, ns)*(sp*sqrt(1/8+1/21))
(132.86-127.44) + c(-1,1)*qt(.975, ns)*sp*sqrt(1/8+1/21)
132.86-127.44 + c(-1,1)*qt(.975, ns)*sp*sqrt(1/8+1/21)
sqrt((var(g1)*9+var(g2)*9)/18)
sqrt((9*var(g1)+9*var(g2))/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
sp * 1/10+1/10
md+c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g1,g2,paired=FALSE, var.equal=TRUE)
t.test(g1,g2,paired=FALSE, var.equal=TRUE)$con
t.test(g1,g2,paired=FALSE, var.equal=TRUE)$conf
t.test(g2,g1,paired=FALSE, var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
swirl()
install.packages(c("Formula", "RMySQL", "Rcpp", "TTR", "checkmate", "dplyr", "htmlwidgets", "httpuv", "xts"))
install.packages(c("Formula", "RMySQL", "Rcpp", "TTR", "checkmate", "dplyr", "htmlwidgets", "httpuv", "xts"))
install.packages(c("Formula", "RMySQL", "Rcpp", "TTR", "checkmate", "dplyr", "htmlwidgets", "httpuv", "xts"))
install.packages(c("Formula", "RMySQL", "Rcpp", "TTR", "checkmate", "dplyr", "htmlwidgets", "httpuv", "xts"))
sessioninfo)
sessioninfo()
sessionInfo()
library(swirl)
swir()
swirl()
swirl()
swirl()
skip()
swirl()
info()
bye()
swirl()
1
2
2/(10/sqrt(16))
15
qt(.95,15)
dim(fs)
t.test(fs$sheight, fs$fheight, paired = TRUE)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
8
?pt
pt(2.5,15,lower.tail = FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(2)
pnorm(2,lower.tail = FALSE)
mybin
pbinom(6,8,.5)
pbinom(6,8,.5, lower.tail = FALSE)
pbinom(7,8,.5,lower.tail = TRUE)
ppois(9,5,lower.tail = FALSE)
myplot(2)
myplot(20)
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2-g1
mean(difference)
sd(difference)
s <- sd(difference)
difference + c(-1,1)*qt(.975,9)*s/sqrt(10)
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(difference)$conf.int
sp <- 8*132.86^2 + 20*127.44^2
sp <- 7*132.86^2 + 20*127.44^2
sp <- 7*15.34^2 + 20*18.23^2
NS <- 27
ns <- 21 + 8 - 2
sp <- sp/ns
sp <- sqrt(sp/ns)
skip()
skip()
skip()
skip()
skip()
swirl()
skip()
skip()
skip()
skip()
bye()
?t.test
?qtest
?qt
1100+ c(-1,1)*qt(0.95)*(30/3)
1100+ c(-1,1)*qt(0.95,8)*(30/3)
1100+ c(-1,1)*qt(0.975,8)*(30/3)
qt(0.975,8)
6/2.3
t.test(-2)
(9*0.6+9*0.68)/18
sqrt(0.64)
-2 + c(-1,1)*qt(0.975,18)*0.8/sqrt(5)
0.5/100 + 2/100
sqrt(0.025)
2 + c(-1,1)*qnorm(0.975)*sqrt(0.025)
8*1.5^2 + 8*1.8^2
43.92/14
3.137143*sqrt(1/9 + 1/9)
-4 + (-1,1)*qt(0.95,16)*1.478863
-4 + c(-1,1)*qt(0.95,16)*1.478863
-4 + c(-1,1)*qt(0.90,16)*1.478863
-4 + c(-1,1)*qnorm(0.95)*1.478863
-4 + c(-1,1)*qt(0.95,16)*1.478863
43.92/16
sqrt(2.745)
sqrt(2.745*(1/9 + 1/9))
-4 + c(-1,1)*qt(0.95,16)*0.781025
data("ToothGrowth")
str(ToothGrowth)
?t.test
?subset
g1 <- subset(ToothGrowth, supp=="OJ")
g2 <- subset(ToothGrowth, supp=="VC")
g1
g2 <- subset(ToothGrowth, supp=="VC")$len
g2
library(swirl)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+z, mean=30, lower.tail=FALSE)
pnorm(30+z, mean=32, lower.tail=FALSE)
pnorm(30+z, mean=32, sd=1, lower.tail=FALSE)
pnorm(30+z, mean=32, sd=2, lower.tail=FALSE)
pnorm(30+z*2, mean=32, sd=2, lower.tail=FALSE)
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, n=26, sd=1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = .8, n=27, sd=1, type = "one.sample", alt = "one.sided")$delta
library(ggplot2)
?cor
cor
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x,y)
ln(x,y)
lm(y~x)
lm(y~x-1)
data(mtcars)
with(mtcars, lm(mpg~weight))
str(mtcars)
with(mtcars, lm(mpg~wt))
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x~y)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
w <- c(2, 1, 3, 1)
sum(x*w)/sum(w)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)$conf.int
summary(fit)$conefficients
summary(fit)$coefficients
summary(fit)
data(mtcars)
with(mtcars, lm(mpg+wt))
with(mtcars, lm(mpg~wt))
fit <- with(mtcars, lm(mpg~wt))
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] - 1 * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] -1 * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef[2,1] +1 * qt(.975, df = fit$df) * sumCoef[2, 2]
mean(wt)
33.4505 -4.202635* mean(mtcars$wt)
33.4505 -6.486308* mean(mtcars$wt)
sumCoef[1,1] + 1 * qt(.975, df = fit$df) * sumCoef[1, 2]
fit
37.285 -6.486308* mean(mtcars$wt)
sumCoef
fit$df.residual
fit$df
x1<-data.frame(wt=mean(mtcars$wt))
predict(fit,newdata=x1,interval = "prediction"))
predict(fit,newdata=x1,interval = "prediction")
fit<-lm(mpg~wt,mtcars)
x1<-data.frame(wt=mean(mtcars$wt))
predict(fit,newdata=x1,interval = "prediction")
predict(fit,newdata=x1,interval = "confidence")
?mtcars
predict(fit,newdata=3,interval = "prediction")
x1
x2<-data.frame(wt=3)
predict(fit,newdata=x2,interval = "prediction")
sumCoef[2,1] + c(-1,1) * qt(.975, df = fit$df) * sumCoef[2, 2]
(sumCoef[2,1] + c(-1,1) * qt(.975, df = fit$df) * sumCoef[2, 2])*2
require(datasets);data(InsectSprays);
head(InsectSprays)
table(InsectSprays)
str(InsectSprays)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
data(swiss); par(mfrow = c(2, 2))
fit <- lm(Fertility ~ . , data = swiss); plot(fit)
n <- 100; x <- c(10, rnorm(n)); y <- c(10, c(rnorm(n)))
plot(x, y, frame = FALSE, cex = 2, pch = 21, bg = "lightblue", col = "black")
abline(lm(y ~ x))
fit <- lm(y ~ x)
round(dfbetas(fit)[1 : 10, 2], 3)
round(hatvalues(fit)[1 : 10], 3)
dfbetas(fit)
library(swirl)
swirl()
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
download.file("https://dl.dropboxusercontent.com/u/7710864/data/gaData.rda",destfile="./data/gaData.rda",method="curl")
load("./data/gaData.rda")
gaData$julian <- julian(gaData$date)
head(gaData)
plot(gaData$julian,gaData$visits,pch=19,col="darkgrey",xlab="Julian",ylab="Visits")
lm1 <- lm(gaData$visits ~ gaData$julian)
abline(lm1,col="red",lwd=3)
plot(gaData$julian,gaData$visits,pch=19,col="darkgrey",xlab="Julian",ylab="Visits")
glm1 <- glm(gaData$visits ~ gaData$julian,family="poisson")
abline(lm1,col="red",lwd=3); lines(gaData$julian,glm1$fitted,col="blue",lwd=3)
abline(glm1,col="green", lwd=3)
plot(gaData$julian,gaData$visits,pch=19,col="darkgrey",xlab="Julian",ylab="Visits")
glm1 <- glm(gaData$visits ~ gaData$julian,family="poisson")
abline(lm1,col="red",lwd=3); lines(gaData$julian,glm1$fitted,col="blue",lwd=3)
lines(glm1,col="green", lwd=3)
plot(gaData$julian,gaData$visits,pch=19,col="darkgrey",xlab="Julian",ylab="Visits")
glm1 <- glm(gaData$visits ~ gaData$julian,family="poisson")
abline(lm1,col="red",lwd=3); lines(gaData$julian,glm1$fitted,col="blue",lwd=3)
library(MASS)
data(shuttle)
?shuttle
str(shuttle)
x <- glm(shuttle$use ~ shuttle$wind, family = "binomial")
head(x)
library(UsingR); data(galton); library(reshape); long <- melt(galton)
download.packages(UsingR)
download(UsingR)
install.packages(UsingR)
install.packages ("UsingR")
library(UsingR); data(galton); library(reshape); long <- melt(galton)
install.packages("reshape")
library(reshape); long <- melt(galton)
lm(child~parent,data=galton)
x<- lm(child~parent,data=galton)
plot(x)
library(swirl)
swirl()
play<
()
play()
plot(child~parent,galton)
plot(child~parent-1,galton)
nxt()
plot(child~parent,galton)
plot(jitter(child,4)~parent,galton)
regrline <- lm(child~parent,galton)
abline(regrline,lwd=3,col="red")
play()
abline(lm(child~parent-1,galton),lwd=3,col="red")
abline(lm(child~parent-1,galton),lwd=3,col="blue")
nxt()
summary(regrline)
y <- galton$child
x <- galton$parent
beta1 <- cor(y, x) *  sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
rbind(c(beta0, beta1), coef(lm(y ~ x)))
beta1 <- cor(y, x) *  sd(x) / sd(y)
beta0 <- mean(x) - beta1 * mean(y)
rbind(c(beta0, beta1), coef(lm(x ~ y)))
yc <- y - mean(y)
xc <- x - mean(x)
beta1 <- sum(yc * xc) / sum(xc ^ 2)
c(beta1, coef(lm(y ~ x))[2])
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
n = 100; x = rnorm(n); x2 = rnorm(n); x3 = rnorm(n)
y = 1 + x + x2 + x3 + rnorm(n, sd = .1)
ey = resid(lm(y ~ x2 + x3))
ex = resid(lm(x ~ x2 + x3))
sum(ey * ex) / sum(ex ^ 2)
coef(lm(ey ~ ex - 1))
coef(lm(y ~ x + x2 + x3))
coef(lm(y ~ x))
str(shuttle)
table(shuttle$use)
labels(shuttle$use)
levels(shuttle$use)
sum(shuttle$use)
length(shuttle$use==0)
length(shuttle$use==1)
(shuttle$use==1)
(shuttle$use==0)
(shuttle$use=='auto')
(shuttle$use=='nonauto')
(shuttle$use=='noauto')
levels(shuttle$use) <- c(1,0)
str(shuttle)
sum(shuttle$use)
table(shuttle$use)
glm(shuttle$use~shuttle$wind,family="binomial")
glm1 <- glm(shuttle$use~shuttle$wind,family="binomial")
glm(shuttle$use~factor(shuttle$wind),family="binomial")
-0.25131-0.03181
exp(-0.25131)/exp(-0.28312)
-0.25131/-0.28312
exp(0.8876448)
exp(-0.25131)
exp(-0.28312)
glm(shuttle$use~factor(shuttle$wind)-1,family="binomial")
exp(-0.2513)/exp(-0.2831)
o1 <- exp(-0.2513)
p1 <- o1/(1+o1)
o2 <- exp(-0.2831)
p2 <- o2/(1+o2)
p1/p2
exp(-0.2513)/exp(-0.2831)
library(MASS)
data(shuttle)
glm(shuttle$use~factor(shuttle$wind)-1,family="binomial")
exp(-0.2513)/exp(-0.2831)
1/(exp(-0.2513)/exp(-0.2831))
1/(exp(-0.2513)/exp(-0.03181))
(exp(-0.2513)/exp(-0.03181))
shuttle$use
levels(shuttle$use)
levels(shuttle$use) <- c(1,0)
levels(shuttle$use)
shuttle$use
shuttle$use<-as.numeric(shuttle$use)
str(shuttle)
table(shuttle$use)
glm1 <- glm(shuttle$use~factor(shuttle$wind)-1,family="binomial")
shuttle$use
data(shuttle)
shuttle$use
shuttle$use <- factor((shuttle$use=="auto"),levels=c(TRUE,FALSE), labels=c(1,0))
shuttle$use
shuttle$use<-as.numeric(shuttle$use)
shuttle$use
shuttle$use <- sapply(shuttle$use==2, 0)
data(shuttle)
shuttle$use <- factor((shuttle$use=="auto"),levels=c(TRUE,FALSE), labels=c(1,0))
shuttle$use
as.numeric(levels(shuttle$use))[shuttle$use]
shuttle$use
str(shuttle)
shuttle$use<-as.numeric(levels(shuttle$use))[shuttle$use]
str(shuttle)
str(shuttle)
shuttle$use
glm1 <- glm(shuttle$use~factor(shuttle$wind)-1,family="binomial")
glm1$coefficients
exp(glm1$coef[1])/exp(glm1$coef[2]
)
glm2 <- glm(shuttle$use~factor(shuttle$wind)-1+mgn,family="binomial")
glm2 <- glm(shuttle$use~factor(shuttle$wind)-1+magn,family="binomial")
glm2 <- glm(shuttle$use~factor(shuttle$wind)-1+shuttle$magn,family="binomial")
glm2
exp(glm2$coef[1])/exp(glm2$coef[2])
shuttle$magn
levels(shuttle$magn)
shutt<- shuttle
levels(shutt$magn)
as.numeric(shutt$magn)
str(shutt)
shuttle$magn<-as.numeric(shuttle$magn)
str(shuttle)
glm2 <- glm(shuttle$use~factor(shuttle$wind)-1+shuttle$magn,family="binomial")
glm2
exp(glm2$coef[1])/exp(glm2$coef[2])
data("InsectSprays")
str(InsectSprays)
glm3 <- glm(InsectSprays$count~factor(InsectSprays$spray)-1,family="poisson")
glm3
exp(glm2$coef[1])/exp(glm2$coef[2])
exp(glm3$coef[1])/exp(glm3$coef[2])
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
round(exp(coef(lm(I(log(y + 1)) ~ x))), 5)
?abline()
abline(coef = c(3.16213,1,00072))
glm4 <- glm(y~x,family="poisson")
glm4
glm4 <- glm(y~x,family="binomial")
?dgamma
?lm
?mean
?show
?predict
?colSums
?getClass
setwd("~/R/c9/leaflet")
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
df <- read.csv("got.csv")
p <- ggplot(data=df, aes(x=Episode, y=Rating)) + geom_point(aes(text=paste("Season:", Season)), size=4) + geom_smooth(aes(fill=Season))
gg <- ggplotly(p)
plotly_POST(gg)
devtools::install_github('hadley/ggplot2')
install_github('hadley/ggplot2')
?devtools
devtools::install_github('hadley/ggplot2')
install_github('hadley/ggplot2')
install.packages("devtools")
install_github('hadley/ggplot2')
library(devtools)
install_github('hadley/ggplot2')
